name: AAA-MOTIF PIPELINE FOR GA [S]

on:
  schedule:
    - cron: "0 21 * * *"

permissions:
  contents: read

jobs:
  optimize:
    name: MCTS Optimization
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_2 }}

    steps:
      - name: CHECKOUT MOTIF REPO
        uses: actions/checkout@v4
        with:
          repository: HaiAu2501/MOTIF
          token: ${{ secrets.CHECKOUT_TOKEN }}
          ref: turn-based

      - name: SETUP PYTHON
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: INSTALL DEPENDENCIES
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: RUN OPTIMIZATION
        run: |
          echo "Running optimization with solver=tsp_ga_f2_f3..."
          python main.py \
            solver=tsp_ga_f2_f3 \
            mcts.outer_iterations=20 \
            mcts.inner_iterations=10 \
            mcts.final_iterations=0 \
            llm.model=gpt-4o-mini

      - name: UPLOAD OPTIMIZATION RESULTS
        uses: actions/upload-artifact@v4
        with:
          name: optimization-results
          path: results/
          if-no-files-found: warn
          retention-days: 90

  evaluate:
    name: Evaluate tsp_ga_f2_f3 - ${{ matrix.size }}
    needs: optimize
    runs-on: ubuntu-latest
    strategy:
      matrix:
        size: ["50", "100", "200"]

    steps:
      - name: CHECKOUT RUN REPO
        uses: actions/checkout@v4

      - name: SETUP PYTHON
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: INSTALL DEPENDENCIES
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: DOWNLOAD OPTIMIZATION RESULTS
        uses: actions/download-artifact@v4
        with:
          name: optimization-results
          path: results/

      - name: COPY OPTIMIAZED FUNCTIONS
        run: |
          if [ -d "results" ]; then
            echo "Copying optimized functions to tsp_ga directory..."
            cp results/*_final_best.py tsp_ga/
          fi

      - name: RUN EVALUATION tsp_ga - ${{ matrix.size }}
        run: |
          echo "Running evaluation for tsp_ga - ${{ matrix.size }}..."
          cd tsp_ga
          python eval.py ${{ matrix.size }}
